{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kittu\\\\Temp\\\\stackit\\\\src\\\\components\\\\TagInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TagInput({\n  tags,\n  setTags\n}) {\n  _s();\n  const [input, setInput] = useState('');\n  const addTag = () => {\n    const newTag = input.trim();\n    if (newTag && !tags.includes(newTag)) {\n      setTags([...tags, newTag]);\n    }\n    setInput('');\n  };\n  const removeTag = tagToRemove => {\n    setTags(tags.filter(tag => tag !== tagToRemove));\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' || e.key === ',') {\n      e.preventDefault();\n      addTag();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border border-gray-300 rounded-lg p-2 flex flex-wrap gap-2\",\n    children: [tags.map((tag, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-blue-200 text-blue-800 px-3 py-1 rounded-full flex items-center space-x-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: tag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => removeTag(tag),\n        className: \"text-blue-600 hover:text-blue-900 font-bold\",\n        \"aria-label\": `Remove tag ${tag}`,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyDown: handleKeyDown,\n      placeholder: \"Add tag and press Enter\",\n      className: \"flex-grow p-1 outline-none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(TagInput, \"WVveI0ACa0LqOSOlGzu58xcz+KE=\");\n_c = TagInput;\nexport default TagInput;\nvar _c;\n$RefreshReg$(_c, \"TagInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TagInput","tags","setTags","_s","input","setInput","addTag","newTag","trim","includes","removeTag","tagToRemove","filter","tag","handleKeyDown","e","key","preventDefault","className","children","map","idx","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","value","onChange","target","onKeyDown","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/kittu/Temp/stackit/src/components/TagInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction TagInput({ tags, setTags }) {\r\n  const [input, setInput] = useState('');\r\n\r\n  const addTag = () => {\r\n    const newTag = input.trim();\r\n    if (newTag && !tags.includes(newTag)) {\r\n      setTags([...tags, newTag]);\r\n    }\r\n    setInput('');\r\n  };\r\n\r\n  const removeTag = (tagToRemove) => {\r\n    setTags(tags.filter(tag => tag !== tagToRemove));\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter' || e.key === ',') {\r\n      e.preventDefault();\r\n      addTag();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"border border-gray-300 rounded-lg p-2 flex flex-wrap gap-2\">\r\n      {tags.map((tag, idx) => (\r\n        <div key={idx} className=\"bg-blue-200 text-blue-800 px-3 py-1 rounded-full flex items-center space-x-2\">\r\n          <span>{tag}</span>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => removeTag(tag)}\r\n            className=\"text-blue-600 hover:text-blue-900 font-bold\"\r\n            aria-label={`Remove tag ${tag}`}\r\n          >\r\n            &times;\r\n          </button>\r\n        </div>\r\n      ))}\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        onKeyDown={handleKeyDown}\r\n        placeholder=\"Add tag and press Enter\"\r\n        className=\"flex-grow p-1 outline-none\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TagInput;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,MAAM,GAAGA,CAAA,KAAM;IACnB,MAAMC,MAAM,GAAGH,KAAK,CAACI,IAAI,CAAC,CAAC;IAC3B,IAAID,MAAM,IAAI,CAACN,IAAI,CAACQ,QAAQ,CAACF,MAAM,CAAC,EAAE;MACpCL,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEM,MAAM,CAAC,CAAC;IAC5B;IACAF,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAMK,SAAS,GAAIC,WAAW,IAAK;IACjCT,OAAO,CAACD,IAAI,CAACW,MAAM,CAACC,GAAG,IAAIA,GAAG,KAAKF,WAAW,CAAC,CAAC;EAClD,CAAC;EAED,MAAMG,aAAa,GAAIC,CAAC,IAAK;IAC3B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAID,CAAC,CAACC,GAAG,KAAK,GAAG,EAAE;MACtCD,CAAC,CAACE,cAAc,CAAC,CAAC;MAClBX,MAAM,CAAC,CAAC;IACV;EACF,CAAC;EAED,oBACEP,OAAA;IAAKmB,SAAS,EAAC,4DAA4D;IAAAC,QAAA,GACxElB,IAAI,CAACmB,GAAG,CAAC,CAACP,GAAG,EAAEQ,GAAG,kBACjBtB,OAAA;MAAemB,SAAS,EAAC,8EAA8E;MAAAC,QAAA,gBACrGpB,OAAA;QAAAoB,QAAA,EAAON;MAAG;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClB1B,OAAA;QACE2B,IAAI,EAAC,QAAQ;QACbC,OAAO,EAAEA,CAAA,KAAMjB,SAAS,CAACG,GAAG,CAAE;QAC9BK,SAAS,EAAC,6CAA6C;QACvD,cAAY,cAAcL,GAAG,EAAG;QAAAM,QAAA,EACjC;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GATDJ,GAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUR,CACN,CAAC,eACF1B,OAAA;MACE2B,IAAI,EAAC,MAAM;MACXE,KAAK,EAAExB,KAAM;MACbyB,QAAQ,EAAGd,CAAC,IAAKV,QAAQ,CAACU,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE;MAC1CG,SAAS,EAAEjB,aAAc;MACzBkB,WAAW,EAAC,yBAAyB;MACrCd,SAAS,EAAC;IAA4B;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACtB,EAAA,CA/CQH,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AAiDjB,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}