{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kittu\\\\Temp\\\\stackit\\\\src\\\\pages\\\\QuestionDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { database } from '../firebase';\nimport { ref, get, update, push, serverTimestamp } from 'firebase/database';\nimport { useAuth } from '../contexts/AuthContext';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionDetail() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    currentUser\n  } = useAuth();\n  const [question, setQuestion] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [answerText, setAnswerText] = useState('');\n  useEffect(() => {\n    if (!id) return;\n    const questionRef = ref(database, `questions/${id}`);\n    get(questionRef).then(snapshot => {\n      if (snapshot.exists()) {\n        const data = snapshot.val();\n        setQuestion({\n          id,\n          ...data\n        });\n        setAnswers(data.answers || {});\n      } else {\n        setQuestion(null);\n      }\n      setLoading(false);\n    });\n  }, [id]);\n  const handleVote = async (answerId, delta) => {\n    if (!currentUser) {\n      alert('Please log in to vote');\n      return;\n    }\n    const answer = answers[answerId];\n    if (!answer) return;\n\n    // Prevent multiple votes by same user\n    if (answer.voters && answer.voters[currentUser.uid]) {\n      alert('You have already voted on this answer');\n      return;\n    }\n    const answerRef = ref(database, `questions/${id}/answers/${answerId}`);\n    const updatedVotes = (answer.votes || 0) + delta;\n    const updatedVoters = {\n      ...(answer.voters || {})\n    };\n    updatedVoters[currentUser.uid] = true;\n    try {\n      await update(answerRef, {\n        votes: updatedVotes,\n        voters: updatedVoters\n      });\n      setAnswers(prev => ({\n        ...prev,\n        [answerId]: {\n          ...answer,\n          votes: updatedVotes,\n          voters: updatedVoters\n        }\n      }));\n    } catch (err) {\n      alert('Error updating vote: ' + err.message);\n    }\n  };\n  const handleAccept = async answerId => {\n    if (!currentUser || currentUser.uid !== question.authorId) {\n      alert('Only question owner can accept an answer');\n      return;\n    }\n    const questionRef = ref(database, `questions/${id}`);\n    try {\n      await update(questionRef, {\n        acceptedAnswerId: answerId\n      });\n      setQuestion(prev => ({\n        ...prev,\n        acceptedAnswerId: answerId\n      }));\n    } catch (err) {\n      alert('Error accepting answer: ' + err.message);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"p-4 animate-pulse text-center\",\n      children: \"Loading question...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }, this);\n  }\n  if (!question) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"p-4 text-center text-red-600\",\n      children: \"Question not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto p-6 bg-white rounded-lg shadow-lg animate-fadeIn\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"text-blue-600 hover:underline transition duration-300\",\n        children: \"< Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-4\",\n      children: question.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      dangerouslySetInnerHTML: {\n        __html: question.description\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: question.tags && question.tags.map((tag, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"inline-block bg-blue-200 text-blue-800 px-3 py-1 rounded-full mr-2 text-sm\",\n        children: tag\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: \"Answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), Object.keys(answers).length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No answers yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 45\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.entries(answers).map(([answerId, answer]) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `mb-4 p-4 border rounded-lg ${question.acceptedAnswerId === answerId ? 'border-green-500 bg-green-50' : 'border-gray-300'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: answer.content\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600\",\n            children: [\"By: \", answer.authorName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleVote(answerId, 1),\n              className: \"text-green-600 hover:text-green-800\",\n              title: \"Upvote\",\n              children: [\"\\u25B2 \", answer.votes || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleVote(answerId, -1),\n              className: \"text-red-600 hover:text-red-800\",\n              title: \"Downvote\",\n              children: \"\\u25BC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this), currentUser && currentUser.uid === question.authorId && question.acceptedAnswerId !== answerId && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAccept(answerId),\n              className: \"text-blue-600 hover:underline\",\n              children: \"Mark as Accepted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 19\n            }, this), question.acceptedAnswerId === answerId && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-green-700 font-semibold\",\n              children: \"Accepted Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, answerId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), currentUser ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: async e => {\n        e.preventDefault();\n        if (!answerText.trim()) {\n          alert('Answer cannot be empty');\n          return;\n        }\n        const answersRef = ref(database, `questions/${id}/answers`);\n        const answerData = {\n          content: answerText,\n          authorId: currentUser.uid,\n          authorName: currentUser.email,\n          createdAt: serverTimestamp(),\n          votes: 0,\n          voters: {},\n          comments: {}\n        };\n        try {\n          await push(answersRef, answerData);\n          alert('Answer submitted successfully');\n          setAnswerText('');\n          // Refresh answers\n          const questionRef = ref(database, `questions/${id}`);\n          const snapshot = await get(questionRef);\n          if (snapshot.exists()) {\n            const data = snapshot.val();\n            setAnswers(data.answers || {});\n          }\n        } catch (error) {\n          alert('Error submitting answer: ' + error.message);\n        }\n      },\n      className: \"mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"answer\",\n        className: \"block text-lg font-medium text-gray-700 mb-2\",\n        children: \"Write Your Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n        id: \"answer\",\n        value: answerText,\n        onChange: setAnswerText,\n        modules: modules,\n        formats: formats,\n        placeholder: \"Write your answer here...\",\n        className: \"mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition duration-300\",\n        children: \"Submit Your Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-6 text-center text-gray-600\",\n      children: \"Please log in to submit an answer.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionDetail, \"A6sL9VCtPXOqqhq5PoT9k1XsjRM=\", false, function () {\n  return [useParams, useAuth];\n});\n_c = QuestionDetail;\nexport default QuestionDetail;\nvar _c;\n$RefreshReg$(_c, \"QuestionDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","database","ref","get","update","push","serverTimestamp","useAuth","ReactQuill","jsxDEV","_jsxDEV","QuestionDetail","_s","id","currentUser","question","setQuestion","answers","setAnswers","loading","setLoading","error","setError","answerText","setAnswerText","questionRef","then","snapshot","exists","data","val","handleVote","answerId","delta","alert","answer","voters","uid","answerRef","updatedVotes","votes","updatedVoters","prev","err","message","handleAccept","authorId","acceptedAnswerId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","title","dangerouslySetInnerHTML","__html","description","tags","map","tag","idx","Object","keys","length","entries","content","authorName","onClick","onSubmit","e","preventDefault","trim","answersRef","answerData","email","createdAt","comments","htmlFor","value","onChange","modules","formats","placeholder","type","_c","$RefreshReg$"],"sources":["C:/Users/kittu/Temp/stackit/src/pages/QuestionDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { database } from '../firebase';\r\nimport { ref, get, update, push, serverTimestamp } from 'firebase/database';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nfunction QuestionDetail() {\r\n  const { id } = useParams();\r\n  const { currentUser } = useAuth();\r\n\r\n  const [question, setQuestion] = useState(null);\r\n  const [answers, setAnswers] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [answerText, setAnswerText] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (!id) return;\r\n    const questionRef = ref(database, `questions/${id}`);\r\n    get(questionRef).then(snapshot => {\r\n      if (snapshot.exists()) {\r\n        const data = snapshot.val();\r\n        setQuestion({ id, ...data });\r\n        setAnswers(data.answers || {});\r\n      } else {\r\n        setQuestion(null);\r\n      }\r\n      setLoading(false);\r\n    });\r\n  }, [id]);\r\n\r\n  const handleVote = async (answerId, delta) => {\r\n    if (!currentUser) {\r\n      alert('Please log in to vote');\r\n      return;\r\n    }\r\n    const answer = answers[answerId];\r\n    if (!answer) return;\r\n\r\n    // Prevent multiple votes by same user\r\n    if (answer.voters && answer.voters[currentUser.uid]) {\r\n      alert('You have already voted on this answer');\r\n      return;\r\n    }\r\n\r\n    const answerRef = ref(database, `questions/${id}/answers/${answerId}`);\r\n    const updatedVotes = (answer.votes || 0) + delta;\r\n    const updatedVoters = { ...(answer.voters || {}) };\r\n    updatedVoters[currentUser.uid] = true;\r\n\r\n    try {\r\n      await update(answerRef, {\r\n        votes: updatedVotes,\r\n        voters: updatedVoters,\r\n      });\r\n      setAnswers(prev => ({\r\n        ...prev,\r\n        [answerId]: {\r\n          ...answer,\r\n          votes: updatedVotes,\r\n          voters: updatedVoters,\r\n        }\r\n      }));\r\n    } catch (err) {\r\n      alert('Error updating vote: ' + err.message);\r\n    }\r\n  };\r\n\r\n  const handleAccept = async (answerId) => {\r\n    if (!currentUser || currentUser.uid !== question.authorId) {\r\n      alert('Only question owner can accept an answer');\r\n      return;\r\n    }\r\n    const questionRef = ref(database, `questions/${id}`);\r\n    try {\r\n      await update(questionRef, { acceptedAnswerId: answerId });\r\n      setQuestion(prev => ({ ...prev, acceptedAnswerId: answerId }));\r\n    } catch (err) {\r\n      alert('Error accepting answer: ' + err.message);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <p className=\"p-4 animate-pulse text-center\">Loading question...</p>;\r\n  }\r\n\r\n  if (!question) {\r\n    return <p className=\"p-4 text-center text-red-600\">Question not found.</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto p-6 bg-white rounded-lg shadow-lg animate-fadeIn\">\r\n      <nav className=\"mb-4\">\r\n        <Link to=\"/\" className=\"text-blue-600 hover:underline transition duration-300\">\r\n          {\"< Back to Home\"}\r\n        </Link>\r\n      </nav>\r\n      <h1 className=\"text-4xl font-bold mb-4\">{question.title}</h1>\r\n      <div className=\"mb-6\" dangerouslySetInnerHTML={{ __html: question.description }} />\r\n      <div className=\"mb-6\">\r\n        {question.tags && question.tags.map((tag, idx) => (\r\n          <span key={idx} className=\"inline-block bg-blue-200 text-blue-800 px-3 py-1 rounded-full mr-2 text-sm\">\r\n            {tag}\r\n          </span>\r\n        ))}\r\n      </div>\r\n      <h2 className=\"text-2xl font-semibold mb-4\">Answers</h2>\r\n      {Object.keys(answers).length === 0 && <p>No answers yet.</p>}\r\n      <ul>\r\n        {Object.entries(answers).map(([answerId, answer]) => (\r\n          <li key={answerId} className={`mb-4 p-4 border rounded-lg ${question.acceptedAnswerId === answerId ? 'border-green-500 bg-green-50' : 'border-gray-300'}`}>\r\n            <div dangerouslySetInnerHTML={{ __html: answer.content }} />\r\n            <div className=\"mt-2 flex items-center justify-between\">\r\n              <div className=\"text-sm text-gray-600\">By: {answer.authorName}</div>\r\n              <div className=\"flex items-center space-x-4\">\r\n                <button\r\n                  onClick={() => handleVote(answerId, 1)}\r\n                  className=\"text-green-600 hover:text-green-800\"\r\n                  title=\"Upvote\"\r\n                >\r\n                  ▲ {answer.votes || 0}\r\n                </button>\r\n                <button\r\n                  onClick={() => handleVote(answerId, -1)}\r\n                  className=\"text-red-600 hover:text-red-800\"\r\n                  title=\"Downvote\"\r\n                >\r\n                  ▼\r\n                </button>\r\n                {currentUser && currentUser.uid === question.authorId && question.acceptedAnswerId !== answerId && (\r\n                  <button\r\n                    onClick={() => handleAccept(answerId)}\r\n                    className=\"text-blue-600 hover:underline\"\r\n                  >\r\n                    Mark as Accepted\r\n                  </button>\r\n                )}\r\n                {question.acceptedAnswerId === answerId && (\r\n                  <span className=\"text-green-700 font-semibold\">Accepted Answer</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {currentUser ? (\r\n        <form\r\n          onSubmit={async (e) => {\r\n            e.preventDefault();\r\n            if (!answerText.trim()) {\r\n              alert('Answer cannot be empty');\r\n              return;\r\n            }\r\n            const answersRef = ref(database, `questions/${id}/answers`);\r\n            const answerData = {\r\n              content: answerText,\r\n              authorId: currentUser.uid,\r\n              authorName: currentUser.email,\r\n              createdAt: serverTimestamp(),\r\n              votes: 0,\r\n              voters: {},\r\n              comments: {},\r\n            };\r\n            try {\r\n              await push(answersRef, answerData);\r\n              alert('Answer submitted successfully');\r\n              setAnswerText('');\r\n              // Refresh answers\r\n              const questionRef = ref(database, `questions/${id}`);\r\n              const snapshot = await get(questionRef);\r\n              if (snapshot.exists()) {\r\n                const data = snapshot.val();\r\n                setAnswers(data.answers || {});\r\n              }\r\n            } catch (error) {\r\n              alert('Error submitting answer: ' + error.message);\r\n            }\r\n          }}\r\n          className=\"mt-6\"\r\n        >\r\n          <label htmlFor=\"answer\" className=\"block text-lg font-medium text-gray-700 mb-2\">\r\n            Write Your Answer\r\n          </label>\r\n          <ReactQuill\r\n            id=\"answer\"\r\n            value={answerText}\r\n            onChange={setAnswerText}\r\n            modules={modules}\r\n            formats={formats}\r\n            placeholder=\"Write your answer here...\"\r\n            className=\"mb-4\"\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition duration-300\"\r\n          >\r\n            Submit Your Answer\r\n          </button>\r\n        </form>\r\n      ) : (\r\n        <p className=\"mt-6 text-center text-gray-600\">Please log in to submit an answer.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuestionDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}