{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kittu\\\\Temp\\\\stackit\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { auth } from '../firebase';\nimport { onAuthStateChanged, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Example roles: 'guest', 'user', 'admin'\n  const [role, setRole] = useState('guest');\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setCurrentUser(user);\n      if (user) {\n        // TODO: Fetch user role from database or claims\n        // For demonstration, assign 'admin' role to a specific email\n        if (user.email === 'admin@example.com') {\n          setRole('admin');\n        } else {\n          setRole('user');\n        }\n      } else {\n        setRole('guest');\n      }\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  function login(email, password) {\n    return signInWithEmailAndPassword(auth, email, password);\n  }\n  function signup(email, password) {\n    return createUserWithEmailAndPassword(auth, email, password);\n  }\n  function logout() {\n    return signOut(auth);\n  }\n  const value = {\n    currentUser,\n    role,\n    login,\n    signup,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"KhPINeYpHuCxo6Z3Q8EVxIoL4xE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","auth","onAuthStateChanged","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","role","setRole","unsubscribe","user","email","login","password","signup","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kittu/Temp/stackit/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { auth } from '../firebase';\r\nimport {\r\n  onAuthStateChanged,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  signOut,\r\n} from 'firebase/auth';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Example roles: 'guest', 'user', 'admin'\r\n  const [role, setRole] = useState('guest');\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      setCurrentUser(user);\r\n      if (user) {\r\n        // TODO: Fetch user role from database or claims\r\n        // For demonstration, assign 'admin' role to a specific email\r\n        if (user.email === 'admin@example.com') {\r\n          setRole('admin');\r\n        } else {\r\n          setRole('user');\r\n        }\r\n      } else {\r\n        setRole('guest');\r\n      }\r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  function login(email, password) {\r\n    return signInWithEmailAndPassword(auth, email, password);\r\n  }\r\n\r\n  function signup(email, password) {\r\n    return createUserWithEmailAndPassword(auth, email, password);\r\n  }\r\n\r\n  function logout() {\r\n    return signOut(auth);\r\n  }\r\n\r\n  const value = {\r\n    currentUser,\r\n    role,\r\n    login,\r\n    signup,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,SAASC,IAAI,QAAQ,aAAa;AAClC,SACEC,kBAAkB,EAClBC,0BAA0B,EAC1BC,8BAA8B,EAC9BC,OAAO,QACF,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,WAAW,gBAAGX,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASY,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,OAAOZ,UAAU,CAACU,WAAW,CAAC;AAChC;AAACE,EAAA,CAFeD,OAAO;AAIvB,OAAO,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACzC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,OAAO,CAAC;EAEzCD,SAAS,CAAC,MAAM;IACd,MAAMqB,WAAW,GAAGlB,kBAAkB,CAACD,IAAI,EAAGoB,IAAI,IAAK;MACrDN,cAAc,CAACM,IAAI,CAAC;MACpB,IAAIA,IAAI,EAAE;QACR;QACA;QACA,IAAIA,IAAI,CAACC,KAAK,KAAK,mBAAmB,EAAE;UACtCH,OAAO,CAAC,OAAO,CAAC;QAClB,CAAC,MAAM;UACLA,OAAO,CAAC,MAAM,CAAC;QACjB;MACF,CAAC,MAAM;QACLA,OAAO,CAAC,OAAO,CAAC;MAClB;MACAF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;IAEF,OAAOG,WAAW;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,SAASG,KAAKA,CAACD,KAAK,EAAEE,QAAQ,EAAE;IAC9B,OAAOrB,0BAA0B,CAACF,IAAI,EAAEqB,KAAK,EAAEE,QAAQ,CAAC;EAC1D;EAEA,SAASC,MAAMA,CAACH,KAAK,EAAEE,QAAQ,EAAE;IAC/B,OAAOpB,8BAA8B,CAACH,IAAI,EAAEqB,KAAK,EAAEE,QAAQ,CAAC;EAC9D;EAEA,SAASE,MAAMA,CAAA,EAAG;IAChB,OAAOrB,OAAO,CAACJ,IAAI,CAAC;EACtB;EAEA,MAAM0B,KAAK,GAAG;IACZb,WAAW;IACXI,IAAI;IACJK,KAAK;IACLE,MAAM;IACNC;EACF,CAAC;EAED,oBACEnB,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAf,QAAA,EAChC,CAACI,OAAO,IAAIJ;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B;AAACnB,GAAA,CApDeF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}